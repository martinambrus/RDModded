plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "maven-publish"
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

compileJava {
    sourceCompatibility '1.8'
    targetCompatibility '1.8'
}

sourceSets {
    main.java.srcDirs 'src'
    //main.resources.srcDirs( 'src' )
}

ext {
    api_version = '0.1.2'
    api_filename = 'rd-api.jar';
    rd_version = 'rd-132211'
    rd_type = 'preclassic'
    fernflower_filename = 'fernflower.jar'
    rubydung_filename = 'rubydung-launcher.jar'
    lwjgl_version = 'lwjgl-2.9.3'
    lwjgl_filename = "${project.ext.lwjgl_version}.zip"
}

dependencies {
    /*implementation fileTree( dir: "libs/${project.ext.lwjgl_version}/jar", includes: ['*.jar'] )
    implementation fileTree( dir: "libs", includes: ['*.jar'] )*/
    compileOnly files(
            "libs/${project.ext.lwjgl_version}/jar/lwjgl.jar",
            "libs/${project.ext.lwjgl_version}/jar/lwjgl_util.jar",
    )
    implementation files(
            "libs/rd-api.jar",
    )
}

task downloadAPI(type: FileDownloader) {
    sourceUrl = "https://github.com/martinambrus/RDApi/releases/download/${project.ext.api_version}/rd-api.jar"
    target = new File( "libs/${project.ext.api_filename}" )
}

task downloadLwjgl(type: FileDownloader) {
    sourceUrl = "https://www.dropbox.com/scl/fi/jkko3vw0h35kitxpm7pai/lwjgl-2.9.3.zip?rlkey=477rw7zj62fi7k1q1rnkg7zap&st=oefgpib6&dl=1"
    target = new File( "libs/${project.ext.lwjgl_filename}" )
}

task extractLwjgl(type: Copy, dependsOn: [ 'downloadLwjgl' ]) {
    from zipTree( "libs/${project.ext.lwjgl_filename}" )
    into 'libs'
}

task downloadFernflower(type: FileDownloader) {
    sourceUrl = 'https://github.com/martinambrus/fernflower/releases/download/v1/fernflower.jar'
    target = new File( "libs/${project.ext.fernflower_filename}" )
}

task downloadRubyDung(type: FileDownloader) {
    sourceUrl = "https://vault.omniarchive.uk/archive/java/client-${project.ext.rd_type}/${project.ext.rd_version}-launcher.jar"
    target = new File( "libs/${project.ext.rubydung_filename}" )
}

task decompileJar(type: JavaExec, dependsOn: [ 'downloadFernflower', 'downloadRubyDung' ]) {
    mainClass="-jar"
    args = [
            "libs/${project.ext.fernflower_filename}",
            "libs/${project.ext.rubydung_filename}",
            "decompiled"
    ]
}

task extractSources(type: Copy, dependsOn: [ 'decompileJar' ]) {
    from zipTree( "decompiled/${project.ext.rubydung_filename}" )
    into 'src'
}

task applyPatches(dependsOn: [ 'extractSources', 'extractLwjgl', 'downloadAPI' ]) {
    doLast {
        fileTree("patches").matching { include "**/*.patch" }.each { aFile ->
            exec {
                workingDir './'
                commandLine 'git', 'apply', aFile.absolutePath, '--directory=src'
            }
        }
    }
}

task first_time_run( dependsOn: [ 'applyPatches' ] ) {}

shadowJar {
    archiveBaseName.set('rd-custom')
    archiveClassifier.set('')
    archiveVersion.set('')
    includeEmptyDirs = false
    into( '/' ) {
        from file ( './src/terrain.png' )
    }
}

class FileDownloader extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target)
    }
}